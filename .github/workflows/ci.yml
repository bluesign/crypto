name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - feature/**
      - v[0-9]+.[0-9]+

env:
  GO_VERSION: 1.19

concurrency: 
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:
  golangci:
    strategy:
      fail-fast: false
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
    - name: Run go generate
      run: go generate
    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
        version: v1.49
        args: -v --build-tags relic
        # https://github.com/golangci/golangci-lint-action/issues/244
        skip-cache: true

  tidy:
    name: Tidy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      - name: Run tidy
        run: go mod tidy -v

  shell-check:
    name: ShellCheck
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: Run ShellCheck
      uses: ludeeus/action-shellcheck@203a3fd018dfe73f8ae7e3aa8da2c149a5f41c33
      with:
        scandir: './'
        ignore: 'relic'

  unit-test:
    name: Unit Tests
    strategy:
      fail-fast: false
    # need to set image explicitly due to GitHub logging issue as described in https://github.com/onflow/flow-go/pull/3087#issuecomment-1234383202
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
    - name: Run tests (${{ matrix.targets.name }})
      uses: nick-fields/retry@v2
      with:
        timeout_minutes: 25
        max_attempts: 3
        command: VERBOSE=1 make test
      #env:
      #  RACE_DETECTOR: 1
    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.txt
        flags: unittests
        name: codecov-umbrella
